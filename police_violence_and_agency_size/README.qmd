---
title: "Police Violence and Agency Size"
format: 
  gfm:
    preview-mode: raw
jupyter: python3
execute:
  echo: false
toc: false

---

This repository contains code to recreate support analysis from our research paper “Predicting Police Misconduct”. In our paper, we study how well a data-driven machine learning system can predict serious instances of police misconduct. The goal of such a system, often called an early intervention system, is to identify officers who exhibit warning signs of a serious negative event and intervene before with support and services before that comes to pass. Read below for a high-level description of results, or [click here](#replication-instructions) to jump straight to replication instructions. For more information, please see the paper or contact us. 


## Analysis 
```{python}
import pandas as pd
import numpy as np
import sys
sys.path.append("analysis/")
import merge_helpers
import graph_helpers
import cleaning_helpers
import warnings 
warnings.filterwarnings("ignore")
from IPython import get_ipython
html_formatter = get_ipython().display_formatter.formatters['text/html']
pd.options.display.float_format = '{:.2f}'.format
html_formatter.for_type(pd.DataFrame, lambda df: df.to_html(max_rows = pd.get_option("display.max_rows"), show_dimensions = True))

```
    

Although our paper focuses on data from two large police departments - the Chicago Police Department and the New York Police Department - our further analysis suggests that police misconduct is not just a problem for large departments. Using data from the Mapping Police Violence project on people killed by police, we find 62% of police killings involve departments with fewer than 500 officers, and 47% of killings involve departments with fewer than 200 officers. 


```{python}

df_mpv = pd.read_csv('raw_data/Mapping Police Violence.csv')
df_roster = pd.read_csv('raw_data/36697-0001-Data.tsv', sep='\t')


# clean specific aspects of the two datasets we'll use; also collapse the mpv df
df_mpv_collapsed = cleaning_helpers.clean_mpv_data(df_mpv)
df_roster_cleaned = cleaning_helpers.clean_roster_data(df_roster)


# merge mpv and roster data on agency names and state
merged_df = merge_helpers.merge_on_names(
    df_mpv_collapsed, 
    df_roster_cleaned, 
    mpv_agency_col='mpv_agency_name', 
    roster_agency_col="roster_agency_name", 
    multi_agency_rule = 'all')

```


```{python}
#| label: Table 1
#| tbl-cap: Cumulative shares by Roster Size Category

graph_helpers.make_cumulative_table(
    merged_df, 
    df_roster_cleaned,
    bins = [1, 100, 200, 500, 1000, float('inf')],
    labels = ['1-99', '100-199', '200-499', '500-999', '1000+'],
    )[['rost_size_cat', 'cumulative_share_officers', 'cumulative_share_killings']].rename(
        columns={
            'rost_size_cat': 'Number of Officers',
            'cumulative_share_officers': 'Cumulative Share of Officers',
            'cumulative_share_killings': 'Cumulative Share of Police Killings'
        }
    )

```

```{python}
#| label: Figure 1
#| fig-cap: Histogram of agency sizes 

# Make the frequency distribution of department sizes
graph_helpers.make_roster_frequency_graph(df_roster_cleaned)

```


```{python}
#| label: Figure 2
#| fig-cap: Distributions of Police Agency Sizes and Proportion of Total Killings

# make the comparison of number of officers and killings graph
graph_helpers.make_bar_graph(merged_df, df_roster_cleaned, mpv_field = 'num_killings', roster_field = 'total_officers')

```


Despite the fact that large and small departments account for a roughly proportionate share of police killings, smaller departments are much less likely to use a tool like an early intervention system. As of 2016, only 12.4% of departments used an EIS. By contrast, 80.5% of large police departments (500+ sworn officers), had implemented an EIS in 2016. 

One roadblock for smaller departments to implementing a data-driven approach to early intervention is the resources necessary to construct such a system. Fortunately, in our research paper, we find evidence that smaller police departments might be able to get the benefits of an EIS using a simple policy like flagging officers with the most prior complaints in the past two years at a dramatically lower cost than building a full-blown machine learning system. 

As a caveat to the above analysis, we note that there are important differences between `police misconduct` and police killings. Most instances of police misconduct, even serious misconduct, do not result in death. Similarly, not all police killings are the result of misconduct. With these caveats in mind, we used the MPV data because we otherwise lack national data on citizen complaints, use of force, or lawsuits. 


## Data & Methodology

We merged data from the Mapping Police Violence project (https://mappingpoliceviolence.org/) with the 2016 Law Enforcement Management and Administrative Statistics (LEMAS) survey to estimate the share of police killings that are committed by small versus mid-size versus large police departments. MPV constructs this dataset by monitoring a stream of news articles produced by Google News and then hand-verifying the details of a possible police killing. We merge this data to the LEMAS survey by agency name. In the cases where the MPV data lists multiple agencies as responsible, we attribute that event to each listed agency (those events are rare and have no qualitative impact on these findings). We limit our study to MPV-collected killings that occurred between January 2013 and April 2023.


## Replication Instructions

### Setting up the Environment

The packages required to run this code exist in `environment.yaml`. To set up and activate the conda environment, execute the following commands:
```bash
conda env create -f environment.yaml
conda activate oss_public_env
```

To add this conda environment as a kernel for the jupyter notebooks, execute the following command:
```bash
python -m ipykernel install --user --name oss_public_env --display-name "oss_public_env" 
```

### Reproducing the analysis


Go into the analysis directory and run the jupyter notebook `police_size_and_agency_violence.ipynb`. Make sure to use `oss_public_env` as the kernel.


## Data sources:

“Mapping Police Violence,” Campaign Zero, June 22, 2023, https://mappingpoliceviolence.org/

United States Department of Justice. Office of Justice Programs. Bureau of Justice Statistics. 
Law Enforcement Agency Roster (LEAR), 2016. Inter-university Consortium for Political and Social 
Research [distributor], 2017-04-05. https://doi.org/10.3886/ICPSR36697.v1
